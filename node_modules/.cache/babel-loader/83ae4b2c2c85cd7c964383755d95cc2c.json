{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartContext.js\";\nimport React, { useState, useContext, createContext, useReducer } from 'react';\nimport { CartReducer, sumItems } from './CartReducer';\nexport const CartContext = createContext();\nconst initialState = {\n  cartItems: [],\n  ...sumItems([]),\n  checkout: false\n};\nexport const CartContextProvider = props => {\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n  const {\n    products\n  } = useContext(StoreContext);\n\n  const increase = payload => {\n    dispatch({\n      type: 'INCREASE',\n      payload\n    });\n  };\n\n  const decrease = payload => {\n    dispatch({\n      type: 'DECREASE',\n      payload\n    });\n  };\n\n  const addProduct = payload => {\n    dispatch({\n      type: 'ADD_PRODUCT',\n      payload\n    });\n  };\n\n  const removeProduct = payload => {\n    dispatch({\n      type: 'REMOVE_PRODUCT',\n      payload\n    });\n  };\n\n  const getProductsInCart = () => {\n    const productsInCart = state.cartItems.map(item => {\n      return products.filter(p => p._id === item._id);\n    });\n    return productsInCart;\n  };\n\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      increase,\n      decrease,\n      addProduct,\n      removeProduct,\n      state,\n      getProductsInCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartContext.js"],"names":["React","useState","useContext","createContext","useReducer","CartReducer","sumItems","CartContext","initialState","cartItems","checkout","CartContextProvider","props","state","dispatch","products","StoreContext","increase","payload","type","decrease","addProduct","removeProduct","getProductsInCart","productsInCart","map","item","filter","p","_id","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,UAArD,QAAuE,OAAvE;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,eAAtC;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEP,MAAMK,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiB,KAAGH,QAAQ,CAAC,EAAD,CAA5B;AAAkCI,EAAAA,QAAQ,EAAE;AAA5C,CAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACC,WAAD,EAAcG,YAAd,CAApC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeb,UAAU,CAACc,YAAD,CAA/B;;AAEA,QAAMC,QAAQ,GAAIC,OAAD,IAAa;AAC3BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,UAAR;AAAoBD,MAAAA;AAApB,KAAD,CAAR;AACF,GAFD;;AAIA,QAAME,QAAQ,GAAIF,OAAD,IAAa;AAC3BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,UAAR;AAAoBD,MAAAA;AAApB,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMG,UAAU,GAAIH,OAAD,IAAa;AAC7BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,aAAR;AAAuBD,MAAAA;AAAvB,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMI,aAAa,GAAIJ,OAAD,IAAa;AAChCJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,gBAAR;AAA0BD,MAAAA;AAA1B,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMK,iBAAiB,GAAG,MAAM;AAC7B,UAAMC,cAAc,GAAGX,KAAK,CAACJ,SAAN,CAAgBgB,GAAhB,CAAqBC,IAAD,IAAU;AAClD,aAAOX,QAAQ,CAACY,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,IAAI,CAACG,GAAtC,CAAP;AACF,KAFsB,CAAvB;AAGA,WAAOL,cAAP;AACF,GALD;;AAOA,sBACG,oBAAC,WAAD,CAAa,QAAb;AACG,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYG,MAAAA,QAAZ;AAAsBC,MAAAA,UAAtB;AAAkCC,MAAAA,aAAlC;AAAiDT,MAAAA,KAAjD;AAAwDU,MAAAA;AAAxD,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIX,KAAK,CAACkB,QAHV,CADH;AAOF,CAlCM","sourcesContent":["import React, { useState, useContext, createContext, useReducer } from 'react';\nimport { CartReducer, sumItems } from './CartReducer';\n\nexport const CartContext = createContext();\n\nconst initialState = { cartItems: [], ...sumItems([]), checkout: false };\n\nexport const CartContextProvider = (props) => {\n   const [state, dispatch] = useReducer(CartReducer, initialState);\n   const { products } = useContext(StoreContext);\n\n   const increase = (payload) => {\n      dispatch({ type: 'INCREASE', payload });\n   };\n\n   const decrease = (payload) => {\n      dispatch({ type: 'DECREASE', payload });\n   };\n\n   const addProduct = (payload) => {\n      dispatch({ type: 'ADD_PRODUCT', payload });\n   };\n\n   const removeProduct = (payload) => {\n      dispatch({ type: 'REMOVE_PRODUCT', payload });\n   };\n\n   const getProductsInCart = () => {\n      const productsInCart = state.cartItems.map((item) => {\n         return products.filter((p) => p._id === item._id);\n      });\n      return productsInCart;\n   };\n\n   return (\n      <CartContext.Provider\n         value={{ increase, decrease, addProduct, removeProduct, state, getProductsInCart }}\n      >\n         {props.children}\n      </CartContext.Provider>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nexport const StoreContext = createContext();\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]);\n  const [isDataLoading, setIsDataLoading] = useState(false); //    const fetcher = (url) => axios.get(url).then((res) => res.data);\n  //    const { data, error } = useSWR('/api/products', fetcher);\n  //    if (data) {\n  //       setProducts(data);\n  //    }\n\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      requests,\n      fetchRequests,\n      fetchRequestsByMeter,\n      loadingRequest\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","axios","StoreContext","StoreContextProvider","props","products","setProducts","isDataLoading","setIsDataLoading","requests","fetchRequests","fetchRequestsByMeter","loadingRequest","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD,CAF4C,CAI5C;AAEA;AAEA;AACA;AACA;;AAEA,sBACG,oBAAC,YAAD,CAAc,QAAd;AACG,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAF;AAAYC,MAAAA,aAAZ;AAA2BC,MAAAA,oBAA3B;AAAiDC,MAAAA;AAAjD,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIR,KAAK,CAACS,QAHV,CADH;AAOF,CAnBM","sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nexport const StoreContext = createContext();\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [isDataLoading, setIsDataLoading] = useState(false);\n\n   //    const fetcher = (url) => axios.get(url).then((res) => res.data);\n\n   //    const { data, error } = useSWR('/api/products', fetcher);\n\n   //    if (data) {\n   //       setProducts(data);\n   //    }\n\n   return (\n      <StoreContext.Provider\n         value={{ requests, fetchRequests, fetchRequestsByMeter, loadingRequest }}\n      >\n         {props.children}\n      </StoreContext.Provider>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload._id)].quantity++;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'DECREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload._id)].quantity--;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'ADD_PRODUCT':\n      const {\n        currentProduct,\n        size,\n        quantity\n      } = action.payload;\n      cartItems.push({\n        _id: currentProduct._id,\n        price: currentProduct.price,\n        size,\n        quantity\n      });\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'REMOVE_PRODUCT':\n      return;\n\n    default:\n      return;\n  }\n};\nexport const sumItems = cartItems => {\n  let itemCount = cartItems.reduce((count, product) => count + product.quantity, 0);\n  let total = cartItems.reduce((sum, product) => sum + product.price * product.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartReducer.js"],"names":["CartReducer","state","action","type","cartItems","findIndex","product","_id","payload","quantity","currentProduct","size","push","price","sumItems","itemCount","reduce","count","total","sum","toFixed"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACGF,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAAtE,CAAhB,EACIE,QADJ;AAEA,aAAO,EACJ,GAAGR,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,UAAL;AACGH,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAAtE,CAAhB,EACIE,QADJ;AAEA,aAAO,EACJ,GAAGR,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,aAAL;AACG,YAAM;AAAEM,QAAAA,cAAF;AAAkBC,QAAAA,IAAlB;AAAwBF,QAAAA;AAAxB,UAAqCP,MAAM,CAACM,OAAlD;AACAJ,MAAAA,SAAS,CAACQ,IAAV,CAAe;AAAEL,QAAAA,GAAG,EAAEG,cAAc,CAACH,GAAtB;AAA2BM,QAAAA,KAAK,EAAEH,cAAc,CAACG,KAAjD;AAAwDF,QAAAA,IAAxD;AAA8DF,QAAAA;AAA9D,OAAf;AACA,aAAO,EACJ,GAAGR,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,gBAAL;AACG;;AACH;AACG;AAzBN;AA2BF,CA5BM;AA8BP,OAAO,MAAMU,QAAQ,GAAIV,SAAD,IAAe;AACpC,MAAIW,SAAS,GAAGX,SAAS,CAACY,MAAV,CAAiB,CAACC,KAAD,EAAQX,OAAR,KAAoBW,KAAK,GAAGX,OAAO,CAACG,QAArD,EAA+D,CAA/D,CAAhB;AAEA,MAAIS,KAAK,GAAGd,SAAS,CACjBY,MADQ,CACD,CAACG,GAAD,EAAMb,OAAN,KAAkBa,GAAG,GAAGb,OAAO,CAACO,KAAR,GAAgBP,OAAO,CAACG,QAD/C,EACyD,CADzD,EAERW,OAFQ,CAEA,CAFA,CAAZ;AAGA,SAAO;AAAEL,IAAAA,SAAF;AAAaG,IAAAA;AAAb,GAAP;AACF,CAPM","sourcesContent":["export const CartReducer = (state, action) => {\n   switch (action.type) {\n      case 'INCREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload._id)]\n            .quantity++;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'DECREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload._id)]\n            .quantity--;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'ADD_PRODUCT':\n         const { currentProduct, size, quantity } = action.payload;\n         cartItems.push({ _id: currentProduct._id, price: currentProduct.price, size, quantity });\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'REMOVE_PRODUCT':\n         return;\n      default:\n         return;\n   }\n};\n\nexport const sumItems = (cartItems) => {\n   let itemCount = cartItems.reduce((count, product) => count + product.quantity, 0);\n\n   let total = cartItems\n      .reduce((sum, product) => sum + product.price * product.quantity, 0)\n      .toFixed(2);\n   return { itemCount, total };\n};\n"]},"metadata":{},"sourceType":"module"}
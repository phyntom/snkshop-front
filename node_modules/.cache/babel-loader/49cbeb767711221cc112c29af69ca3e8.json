{"ast":null,"code":"export const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload._id)].quantity++;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'DECREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload._id)].quantity--;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'ADD_PRODUCT':\n      const {\n        currentProduct,\n        size,\n        qty\n      } = action.payload;\n      const exist = state.cartItems.find(item => item._id === currentProduct._id);\n\n      if (exist) {\n        const index = state.cartItems.findIndex(item => item._id === currentProduct._id);\n        state.cartItems[index].quantity++;\n      } else {\n        state.cartItems.push({\n          _id: currentProduct._id,\n          price: currentProduct.price,\n          size: size,\n          quantity: qty\n        });\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'REMOVE_PRODUCT':\n      return;\n\n    default:\n      return;\n  }\n};\nexport const sumItems = cartItems => {\n  let itemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n  let total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartReducer.js"],"names":["CartReducer","state","action","type","cartItems","findIndex","product","_id","payload","quantity","currentProduct","size","qty","exist","find","item","index","push","price","sumItems","itemCount","reduce","count","total","sum","toFixed"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACGF,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAAtE,CAAhB,EACIE,QADJ;AAEA,aAAO,EACJ,GAAGR,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,UAAL;AACGH,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeD,GAAtE,CAAhB,EACIE,QADJ;AAEA,aAAO,EACJ,GAAGR,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,aAAL;AACG,YAAM;AAAEM,QAAAA,cAAF;AAAkBC,QAAAA,IAAlB;AAAwBC,QAAAA;AAAxB,UAAgCV,MAAM,CAACM,OAA7C;AACA,YAAMK,KAAK,GAAGZ,KAAK,CAACG,SAAN,CAAgBU,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACR,GAAL,KAAaG,cAAc,CAACH,GAA3D,CAAd;;AACA,UAAIM,KAAJ,EAAW;AACR,cAAMG,KAAK,GAAGf,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BU,IAAD,IAAUA,IAAI,CAACR,GAAL,KAAaG,cAAc,CAACH,GAAhE,CAAd;AACAN,QAAAA,KAAK,CAACG,SAAN,CAAgBY,KAAhB,EAAuBP,QAAvB;AACF,OAHD,MAGO;AACJR,QAAAA,KAAK,CAACG,SAAN,CAAgBa,IAAhB,CAAqB;AAClBV,UAAAA,GAAG,EAAEG,cAAc,CAACH,GADF;AAElBW,UAAAA,KAAK,EAAER,cAAc,CAACQ,KAFJ;AAGlBP,UAAAA,IAAI,EAAEA,IAHY;AAIlBF,UAAAA,QAAQ,EAAEG;AAJQ,SAArB;AAMF;;AACD,aAAO,EACJ,GAAGX,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV,CAFP;AAGJ,WAAGe,QAAQ,CAAClB,KAAK,CAACG,SAAP;AAHP,OAAP;;AAKH,SAAK,gBAAL;AACG;;AACH;AACG;AArCN;AAuCF,CAxCM;AA0CP,OAAO,MAAMe,QAAQ,GAAIf,SAAD,IAAe;AACpC,MAAIgB,SAAS,GAAGhB,SAAS,CAACiB,MAAV,CAAiB,CAACC,KAAD,EAAQP,IAAR,KAAiBO,KAAK,GAAGP,IAAI,CAACN,QAA/C,EAAyD,CAAzD,CAAhB;AACA,MAAIc,KAAK,GAAGnB,SAAS,CAACiB,MAAV,CAAiB,CAACG,GAAD,EAAMT,IAAN,KAAeS,GAAG,GAAGT,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACN,QAAxD,EAAkE,CAAlE,EAAqEgB,OAArE,CAA6E,CAA7E,CAAZ;AACA,SAAO;AAAEL,IAAAA,SAAF;AAAaG,IAAAA;AAAb,GAAP;AACF,CAJM","sourcesContent":["export const CartReducer = (state, action) => {\n   switch (action.type) {\n      case 'INCREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload._id)]\n            .quantity++;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'DECREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload._id)]\n            .quantity--;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'ADD_PRODUCT':\n         const { currentProduct, size, qty } = action.payload;\n         const exist = state.cartItems.find((item) => item._id === currentProduct._id);\n         if (exist) {\n            const index = state.cartItems.findIndex((item) => item._id === currentProduct._id);\n            state.cartItems[index].quantity++;\n         } else {\n            state.cartItems.push({\n               _id: currentProduct._id,\n               price: currentProduct.price,\n               size: size,\n               quantity: qty,\n            });\n         }\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'REMOVE_PRODUCT':\n         return;\n      default:\n         return;\n   }\n};\n\nexport const sumItems = (cartItems) => {\n   let itemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n   let total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n   return { itemCount, total };\n};\n"]},"metadata":{},"sourceType":"module"}
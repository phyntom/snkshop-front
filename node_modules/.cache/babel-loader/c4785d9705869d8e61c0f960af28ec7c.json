{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/pages/Profile.js\";\nimport React from 'react';\nimport { removeInStorage, getInStorage } from '../utils/persistStorage';\nimport { StoreContext } from '../context/StoreContext';\nimport Axios from 'axios';\nexport const Profile = props => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const {\n    existUser\n  } = useContext(StoreContext);\n  useEffect(() => {\n    if (!existUser) {\n      props.history.push('/');\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      let config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${existUser.token}`\n        }\n      };\n      const response = Axios.patch('/api/user', {\n        name,\n        email,\n        password\n      });\n      const fecthedUser = response.data;\n      setName(fecthedUser.name);\n      setEmail(fecthedUser.email);\n    } catch (error) {\n      if (error.response.data) setError(error.response.data.message);else setError(error.message);\n    }\n  }, [existUser]);\n\n  const handleUpdate = props => {\n    try {\n      const response = Axios.patch('/api/user', {\n        name,\n        email,\n        password\n      });\n      const updatedUser = response.data;\n    } catch (error) {\n      if (error.response.data) setError(error.response.data.message);else setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirm-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Register\")));\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/pages/Profile.js"],"names":["React","removeInStorage","getInStorage","StoreContext","Axios","Profile","props","name","setName","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","existUser","useContext","useEffect","history","push","config","headers","token","response","patch","fecthedUser","data","message","handleUpdate","updatedUser","handleRegister","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { removeInStorage, getInStorage } from '../utils/persistStorage';\nimport { StoreContext } from '../context/StoreContext';\nimport Axios from 'axios';\n\nexport const Profile = (props) => {\n   const [name, setName] = useState('');\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [confirmPassword, setConfirmPassword] = useState('');\n   const [error, setError] = useState('');\n\n   const { existUser } = useContext(StoreContext);\n\n   useEffect(() => {\n      if (!existUser) {\n         props.history.push('/');\n      }\n   }, []);\n\n   useEffect(() => {\n      try {\n         let config = {\n            headers: {\n               'Content-Type': 'application/json',\n               'Authorization': `Bearer ${existUser.token}`,\n            },\n         };\n         const response = Axios.patch('/api/user', { name, email, password });\n         const fecthedUser = response.data;\n         setName(fecthedUser.name);\n         setEmail(fecthedUser.email);\n      } catch (error) {\n         if (error.response.data) setError(error.response.data.message);\n         else setError(error.message);\n      }\n   }, [existUser]);\n\n   const handleUpdate = (props) => {\n      try {\n         const response = Axios.patch('/api/user', { name, email, password });\n         const updatedUser = response.data;\n      } catch (error) {\n         if (error.response.data) setError(error.response.data.message);\n         else setError(error.message);\n      }\n   };\n\n   return (\n      <FormContainer>\n         <Form onSubmit={handleRegister}>\n            <h3 className='my-5'>Sign In</h3>\n            {error && <Message variant='danger'>{error}</Message>}\n            <Form.Group controlId='name'>\n               <Form.Label>Full Name</Form.Label>\n               <Form.Control\n                  type='text'\n                  placeholder='Enter name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n               <Form.Label>Email Address</Form.Label>\n               <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n               <Form.Label>Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='confirm-password'>\n               <Form.Label>Confirm Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Confirm password'\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Button type='submit' variant='primary'>\n               Register\n            </Button>\n         </Form>\n      </FormContainer>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/components/Paginator.js\";\nimport React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport _ from 'lodash';\n\nconst Paginator = props => {\n  const {\n    next,\n    prev,\n    jump,\n    currentPage,\n    maxPage,\n    startPage,\n    endPage,\n    pageSize,\n    currentData,\n    displayPages\n  } = props;\n  let pages = [];\n  console.log(currentData.length);\n\n  if (pageSize === currentData.length) {\n    pages = _.range(startPage, endPage);\n  } else {\n    pages = _.range(startPage, endPage + 1);\n    console.log(_.range(startPage, endPage + 1));\n  }\n\n  return /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, currentPage > 1 ? /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: () => prev(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }) : '', currentPage > displayPages ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination.Item, {\n    active: maxPage === 1,\n    onClick: () => jump(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  }, 1), /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }\n  })) : '', pages.map(page => /*#__PURE__*/React.createElement(Pagination.Item, {\n    active: page === currentPage,\n    key: page,\n    onClick: () => jump(page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, page)), currentPage + 2 <= maxPage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pagination.Ellipsis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Pagination.Item, {\n    active: maxPage === currentPage,\n    onClick: () => jump(maxPage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, maxPage)) : '', currentPage < maxPage ? /*#__PURE__*/React.createElement(Pagination.Next, {\n    onClick: () => next(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }\n  }) : '');\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/components/Paginator.js"],"names":["React","Pagination","_","Paginator","props","next","prev","jump","currentPage","maxPage","startPage","endPage","pageSize","currentData","displayPages","pages","console","log","length","range","map","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC1B,QAAM;AACHC,IAAAA,IADG;AAEHC,IAAAA,IAFG;AAGHC,IAAAA,IAHG;AAIHC,IAAAA,WAJG;AAKHC,IAAAA,OALG;AAMHC,IAAAA,SANG;AAOHC,IAAAA,OAPG;AAQHC,IAAAA,QARG;AASHC,IAAAA,WATG;AAUHC,IAAAA;AAVG,MAWFV,KAXJ;AAaA,MAAIW,KAAK,GAAG,EAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACK,MAAxB;;AAEA,MAAIN,QAAQ,KAAKC,WAAW,CAACK,MAA7B,EAAqC;AAClCH,IAAAA,KAAK,GAAGb,CAAC,CAACiB,KAAF,CAAQT,SAAR,EAAmBC,OAAnB,CAAR;AACF,GAFD,MAEO;AACJI,IAAAA,KAAK,GAAGb,CAAC,CAACiB,KAAF,CAAQT,SAAR,EAAmBC,OAAO,GAAG,CAA7B,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYf,CAAC,CAACiB,KAAF,CAAQT,SAAR,EAAmBC,OAAO,GAAG,CAA7B,CAAZ;AACF;;AAED,sBACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,WAAW,GAAG,CAAd,gBAAkB,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,OAAO,EAAE,MAAMF,IAAI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA+D,EADnE,EAEIE,WAAW,GAAGM,YAAd,gBACE,uDACG,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,MAAM,EAAEL,OAAO,KAAK,CAArC;AAAwC,IAAA,OAAO,EAAE,MAAMF,IAAI,CAAC,CAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CADJ,CADH,eAIG,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,CADF,GAQE,EAVN,EAYIQ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACR,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,MAAM,EAAEA,IAAI,KAAKb,WAAlC;AAA+C,IAAA,GAAG,EAAEa,IAApD;AAA0D,IAAA,OAAO,EAAE,MAAMd,IAAI,CAACc,IAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IADJ,CADF,CAZJ,EAiBIb,WAAW,GAAG,CAAd,IAAmBC,OAAnB,gBACE,uDACG,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,MAAM,EAAEA,OAAO,KAAKD,WAArC;AAAkD,IAAA,OAAO,EAAE,MAAMD,IAAI,CAACE,OAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,OADJ,CAFH,CADF,GAQE,EAzBN,EA2BID,WAAW,GAAGC,OAAd,gBAAwB,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,OAAO,EAAE,MAAMJ,IAAI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAAqE,EA3BzE,CADH;AA+BF,CAxDD;;AA0DA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport _ from 'lodash';\n\nconst Paginator = (props) => {\n   const {\n      next,\n      prev,\n      jump,\n      currentPage,\n      maxPage,\n      startPage,\n      endPage,\n      pageSize,\n      currentData,\n      displayPages,\n   } = props;\n\n   let pages = [];\n\n   console.log(currentData.length);\n\n   if (pageSize === currentData.length) {\n      pages = _.range(startPage, endPage);\n   } else {\n      pages = _.range(startPage, endPage + 1);\n      console.log(_.range(startPage, endPage + 1));\n   }\n\n   return (\n      <Pagination>\n         {currentPage > 1 ? <Pagination.Prev onClick={() => prev()} /> : ''}\n         {currentPage > displayPages ? (\n            <>\n               <Pagination.Item active={maxPage === 1} onClick={() => jump(1)}>\n                  {1}\n               </Pagination.Item>\n               <Pagination.Ellipsis />\n            </>\n         ) : (\n            ''\n         )}\n         {pages.map((page) => (\n            <Pagination.Item active={page === currentPage} key={page} onClick={() => jump(page)}>\n               {page}\n            </Pagination.Item>\n         ))}\n         {currentPage + 2 <= maxPage ? (\n            <>\n               <Pagination.Ellipsis />\n               <Pagination.Item active={maxPage === currentPage} onClick={() => jump(maxPage)}>\n                  {maxPage}\n               </Pagination.Item>\n            </>\n         ) : (\n            ''\n         )}\n         {currentPage < maxPage ? <Pagination.Next onClick={() => next()} /> : ''}\n      </Pagination>\n   );\n};\n\nexport default Paginator;\n"]},"metadata":{},"sourceType":"module"}
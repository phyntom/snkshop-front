{"ast":null,"code":"export const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      const {\n        currentProduct,\n        size,\n        qty\n      } = action.payload;\n      const index = state.cartItems.findIndex(item => item._id === currentProduct._id);\n      state.cartItems[index].quantity++;\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'DECREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload._id)].quantity--;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'ADD_PRODUCT':\n      const exist = state.cartItems.find(item => item._id === action.payload.currentProduct._id);\n\n      if (exist) {\n        const addedIndex = state.cartItems.findIndex(item => item._id === action.payload.currentProduct._id);\n        state.cartItems[addedIndex].quantity++;\n      } else {\n        state.cartItems.push({\n          _id: action.payload.currentProduct._id,\n          price: action.payload.currentProduct.price,\n          size: action.payload.size,\n          quantity: action.payload.qty\n        });\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'REMOVE_PRODUCT':\n      return;\n\n    default:\n      return;\n  }\n};\nexport const sumItems = cartItems => {\n  let itemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n  let total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartReducer.js"],"names":["CartReducer","state","action","type","currentProduct","size","qty","payload","index","cartItems","findIndex","item","_id","quantity","sumItems","product","exist","find","addedIndex","push","price","itemCount","reduce","count","total","sum","toFixed"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACG,YAAM;AAAEC,QAAAA,cAAF;AAAkBC,QAAAA,IAAlB;AAAwBC,QAAAA;AAAxB,UAAgCJ,MAAM,CAACK,OAA7C;AACA,YAAMC,KAAK,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,SAAhB,CAA2BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,cAAc,CAACQ,GAAhE,CAAd;AACAX,MAAAA,KAAK,CAACQ,SAAN,CAAgBD,KAAhB,EAAuBK,QAAvB;AACA,aAAO,EACJ,GAAGZ,KADC;AAEJQ,QAAAA,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACQ,SAAV,CAFP;AAGJ,WAAGK,QAAQ,CAACb,KAAK,CAACQ,SAAP;AAHP,OAAP;;AAKH,SAAK,UAAL;AACGR,MAAAA,KAAK,CAACQ,SAAN,CAAgBR,KAAK,CAACQ,SAAN,CAAgBC,SAAhB,CAA2BK,OAAD,IAAaA,OAAO,CAACH,GAAR,KAAgBV,MAAM,CAACK,OAAP,CAAeK,GAAtE,CAAhB,EACIC,QADJ;AAEA,aAAO,EACJ,GAAGZ,KADC;AAEJQ,QAAAA,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACQ,SAAV;AAFP,OAAP;;AAIH,SAAK,aAAL;AACG,YAAMO,KAAK,GAAGf,KAAK,CAACQ,SAAN,CAAgBQ,IAAhB,CACVN,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACK,OAAP,CAAeH,cAAf,CAA8BQ,GAD1C,CAAd;;AAGA,UAAII,KAAJ,EAAW;AACR,cAAME,UAAU,GAAGjB,KAAK,CAACQ,SAAN,CAAgBC,SAAhB,CACfC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACK,OAAP,CAAeH,cAAf,CAA8BQ,GADrC,CAAnB;AAGAX,QAAAA,KAAK,CAACQ,SAAN,CAAgBS,UAAhB,EAA4BL,QAA5B;AACF,OALD,MAKO;AACJZ,QAAAA,KAAK,CAACQ,SAAN,CAAgBU,IAAhB,CAAqB;AAClBP,UAAAA,GAAG,EAAEV,MAAM,CAACK,OAAP,CAAeH,cAAf,CAA8BQ,GADjB;AAElBQ,UAAAA,KAAK,EAAElB,MAAM,CAACK,OAAP,CAAeH,cAAf,CAA8BgB,KAFnB;AAGlBf,UAAAA,IAAI,EAAEH,MAAM,CAACK,OAAP,CAAeF,IAHH;AAIlBQ,UAAAA,QAAQ,EAAEX,MAAM,CAACK,OAAP,CAAeD;AAJP,SAArB;AAMF;;AACD,aAAO,EACJ,GAAGL,KADC;AAEJQ,QAAAA,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACQ,SAAV,CAFP;AAGJ,WAAGK,QAAQ,CAACb,KAAK,CAACQ,SAAP;AAHP,OAAP;;AAKH,SAAK,gBAAL;AACG;;AACH;AACG;AA1CN;AA4CF,CA7CM;AA+CP,OAAO,MAAMK,QAAQ,GAAIL,SAAD,IAAe;AACpC,MAAIY,SAAS,GAAGZ,SAAS,CAACa,MAAV,CAAiB,CAACC,KAAD,EAAQZ,IAAR,KAAiBY,KAAK,GAAGZ,IAAI,CAACE,QAA/C,EAAyD,CAAzD,CAAhB;AACA,MAAIW,KAAK,GAAGf,SAAS,CAACa,MAAV,CAAiB,CAACG,GAAD,EAAMd,IAAN,KAAec,GAAG,GAAGd,IAAI,CAACS,KAAL,GAAaT,IAAI,CAACE,QAAxD,EAAkE,CAAlE,EAAqEa,OAArE,CAA6E,CAA7E,CAAZ;AACA,SAAO;AAAEL,IAAAA,SAAF;AAAaG,IAAAA;AAAb,GAAP;AACF,CAJM","sourcesContent":["export const CartReducer = (state, action) => {\n   switch (action.type) {\n      case 'INCREASE':\n         const { currentProduct, size, qty } = action.payload;\n         const index = state.cartItems.findIndex((item) => item._id === currentProduct._id);\n         state.cartItems[index].quantity++;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'DECREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload._id)]\n            .quantity--;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'ADD_PRODUCT':\n         const exist = state.cartItems.find(\n            (item) => item._id === action.payload.currentProduct._id\n         );\n         if (exist) {\n            const addedIndex = state.cartItems.findIndex(\n               (item) => item._id === action.payload.currentProduct._id\n            );\n            state.cartItems[addedIndex].quantity++;\n         } else {\n            state.cartItems.push({\n               _id: action.payload.currentProduct._id,\n               price: action.payload.currentProduct.price,\n               size: action.payload.size,\n               quantity: action.payload.qty,\n            });\n         }\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'REMOVE_PRODUCT':\n         return;\n      default:\n         return;\n   }\n};\n\nexport const sumItems = (cartItems) => {\n   let itemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n   let total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n   return { itemCount, total };\n};\n"]},"metadata":{},"sourceType":"module"}
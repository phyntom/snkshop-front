{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\nexport const StoreContext = createContext();\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]); //    const [isDataLoading, setIsDataLoading] = useState(false);\n  //    const fetcher = (url) => axios.get(url).then((res) => res.data);\n  //    const { data, error } = useSWR('/api/products', fetcher);\n  //    if (data) {\n  //       setProducts(data);\n  //    }\n\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      products\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","useSWR","axios","StoreContext","StoreContextProvider","props","products","setProducts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAD4C,CAE5C;AAEA;AAEA;AAEA;AACA;AACA;;AAEA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAbM","sourcesContent":["import React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nexport const StoreContext = createContext();\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   //    const [isDataLoading, setIsDataLoading] = useState(false);\n\n   //    const fetcher = (url) => axios.get(url).then((res) => res.data);\n\n   //    const { data, error } = useSWR('/api/products', fetcher);\n\n   //    if (data) {\n   //       setProducts(data);\n   //    }\n\n   return <StoreContext.Provider value={{ products }}></StoreContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/pages/Register.js\";\nimport React, { useState } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { saveInStorage, getInStorage } from '../utils/persistStorage';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Axios from 'axios';\nexport const Register = props => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    if (!password || password === '') {\n      setError('Password cannot be empty');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    const response = await Axios.post('/api/users', {\n      name,\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirm-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Register\")));\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/pages/Register.js"],"names":["React","useState","FormContainer","saveInStorage","getInStorage","Form","Button","Message","Axios","Register","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleRegister","e","preventDefault","response","post","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { saveInStorage, getInStorage } from '../utils/persistStorage';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Axios from 'axios';\n\nexport const Register = (props) => {\n   const [name, setName] = useState('');\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [confirmPassword, setConfirmPassword] = useState('');\n   const [error, setError] = useState('');\n\n   const handleRegister = async (e) => {\n      e.preventDefault();\n      if (!password || password === '') {\n         setError('Password cannot be empty');\n         return;\n      }\n      if (password !== confirmPassword) {\n         setError('Passwords do not match');\n         return;\n      }\n      const response = await Axios.post('/api/users', { name, email, password });\n   };\n\n   return (\n      <FormContainer>\n         <Form onSubmit={handleRegister}>\n            <h3 className='my-5'>Sign In</h3>\n            {error && <Message variant='danger'>{error}</Message>}\n            <Form.Group controlId='name'>\n               <Form.Label>Full Name</Form.Label>\n               <Form.Control\n                  type='text'\n                  placeholder='Enter name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n               <Form.Label>Email Address</Form.Label>\n               <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n               <Form.Label>Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='confirm-password'>\n               <Form.Label>Confirm Password</Form.Label>\n               <Form.Control\n                  type='password'\n                  placeholder='Confirm password'\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n               ></Form.Control>\n            </Form.Group>\n            <Button type='submit' variant='primary'>\n               Register\n            </Button>\n         </Form>\n      </FormContainer>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
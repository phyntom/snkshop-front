{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { saveInStorage, removeInStorage, getInStorage } from '../utils/persistStorage';\nexport const StoreContext = createContext();\nconst savedUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]);\n  const [existUser, setExistUser] = useState(savedUser);\n\n  const fetchProducts = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('api/products');\n      setProducts(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const fetchProductById = id => {\n    return products.find(product => product._id === id);\n  };\n\n  const updateSavedUser = user => {\n    saveInStorage('user', user);\n  };\n\n  const removeSavedUser = user => {\n    removeInStorage('user', user);\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      products,\n      fetchProducts,\n      fetchProductById,\n      existUser,\n      updateSavedUser,\n      removeSavedUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","useEffect","axios","saveInStorage","removeInStorage","getInStorage","StoreContext","savedUser","localStorage","getItem","JSON","parse","StoreContextProvider","props","products","setProducts","existUser","setExistUser","fetchProducts","data","get","error","console","log","message","fetchProductById","id","find","product","_id","updateSavedUser","user","removeSavedUser","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,YAAzC,QAA6D,yBAA7D;AAEA,OAAO,MAAMC,YAAY,GAAGP,aAAa,EAAlC;AAEP,MAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAA5F;AAEA,OAAO,MAAMG,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACO,SAAD,CAA1C;;AAEA,QAAMW,aAAa,GAAG,YAAY;AAC/B,QAAI;AACD,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAU,cAAV,CAAvB;AACAL,MAAAA,WAAW,CAACI,IAAD,CAAX;AACF,KAHD,CAGE,OAAOE,KAAP,EAAc;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACF;AACH,GAPD;;AASA,QAAMC,gBAAgB,GAAIC,EAAD,IAAQ;AAC9B,WAAOZ,QAAQ,CAACa,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBH,EAA3C,CAAP;AACF,GAFD;;AAIA,QAAMI,eAAe,GAAIC,IAAD,IAAU;AAC/B5B,IAAAA,aAAa,CAAC,MAAD,EAAS4B,IAAT,CAAb;AACF,GAFD;;AAIA,QAAMC,eAAe,GAAID,IAAD,IAAU;AAC/B3B,IAAAA,eAAe,CAAC,MAAD,EAAS2B,IAAT,CAAf;AACF,GAFD;;AAIA9B,EAAAA,SAAS,CAAC,MAAM;AACbiB,IAAAA,aAAa;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACG,oBAAC,YAAD,CAAc,QAAd;AACG,IAAA,KAAK,EAAE;AACJJ,MAAAA,QADI;AAEJI,MAAAA,aAFI;AAGJO,MAAAA,gBAHI;AAIJT,MAAAA,SAJI;AAKJc,MAAAA,eALI;AAMJE,MAAAA;AANI,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUInB,KAAK,CAACoB,QAVV,CADH;AAcF,CA3CM","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { saveInStorage, removeInStorage, getInStorage } from '../utils/persistStorage';\n\nexport const StoreContext = createContext();\n\nconst savedUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [existUser, setExistUser] = useState(savedUser);\n\n   const fetchProducts = async () => {\n      try {\n         const { data } = await axios.get('api/products');\n         setProducts(data);\n      } catch (error) {\n         console.log(error.message);\n      }\n   };\n\n   const fetchProductById = (id) => {\n      return products.find((product) => product._id === id);\n   };\n\n   const updateSavedUser = (user) => {\n      saveInStorage('user', user);\n   };\n\n   const removeSavedUser = (user) => {\n      removeInStorage('user', user);\n   };\n\n   useEffect(() => {\n      fetchProducts();\n   }, []);\n\n   return (\n      <StoreContext.Provider\n         value={{\n            products,\n            fetchProducts,\n            fetchProductById,\n            existUser,\n            updateSavedUser,\n            removeSavedUser,\n         }}\n      >\n         {props.children}\n      </StoreContext.Provider>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
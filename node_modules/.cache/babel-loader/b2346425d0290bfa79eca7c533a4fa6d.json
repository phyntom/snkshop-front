{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\nexport const StoreContext = createContext();\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]);\n  const [isDataLoading, setIsDataLoading] = false;\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR('/api/products', fetcher);\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","useSWR","axios","StoreContext","StoreContextProvider","props","products","setProducts","isDataLoading","setIsDataLoading","fetcher","url","get","then","res","data","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoC,KAA1C;;AACA,QAAMC,OAAO,GAAIC,GAAD,IAAST,KAAK,CAACU,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAjC,CAAzB;;AACA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,MAAM,CAAC,eAAD,EAAkBS,OAAlB,CAA9B;AAEA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEJ,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAPM","sourcesContent":["import React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nexport const StoreContext = createContext();\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [isDataLoading, setIsDataLoading] = false;\n   const fetcher = (url) => axios.get(url).then((res) => res.data);\n   const { data, error } = useSWR('/api/products', fetcher);\n\n   return <StoreContext.Provider value={products}></StoreContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}
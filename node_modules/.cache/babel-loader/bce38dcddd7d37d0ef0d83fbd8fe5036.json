{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\nexport const StoreContext = createContext();\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]);\n  const [isDataLoading, setIsDataLoading] = false;\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  const useFetcher = endPoint => {\n    const {\n      data,\n      error\n    } = useSWR(endPoint, fetcher);\n    return {\n      foundProducts: data,\n      isLoading: !error && !data,\n      isError: error\n    };\n  };\n\n  const fetchProducts = async () => {\n    try {\n      const {\n        foundProducts,\n        isLoading,\n        isError\n      } = useFetcher('/api/products');\n      setProducts(foundProducts);\n      setIsDataLoading(isLoading);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: (products, fetchProducts, isDataLoading),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","useSWR","axios","StoreContext","StoreContextProvider","props","products","setProducts","isDataLoading","setIsDataLoading","fetcher","url","get","then","res","data","useFetcher","endPoint","error","foundProducts","isLoading","isError","fetchProducts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoC,KAA1C;;AACA,QAAMC,OAAO,GAAIC,GAAD,IAAST,KAAK,CAACU,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAjC,CAAzB;;AAEA,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC9B,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAkBjB,MAAM,CAACgB,QAAD,EAAWP,OAAX,CAA9B;AACA,WAAO;AACJS,MAAAA,aAAa,EAAEJ,IADX;AAEJK,MAAAA,SAAS,EAAE,CAACF,KAAD,IAAU,CAACH,IAFlB;AAGJM,MAAAA,OAAO,EAAEH;AAHL,KAAP;AAKF,GAPD;;AASA,QAAMI,aAAa,GAAG,YAAY;AAC/B,QAAI;AACD,YAAM;AAAEH,QAAAA,aAAF;AAAiBC,QAAAA,SAAjB;AAA4BC,QAAAA;AAA5B,UAAwCL,UAAU,CAAC,eAAD,CAAxD;AACAT,MAAAA,WAAW,CAACY,aAAD,CAAX;AACAV,MAAAA,gBAAgB,CAACW,SAAD,CAAhB;AACF,KAJD,CAIE,OAAOF,KAAP,EAAc,CAAE;AACpB,GAND;;AAOA,sBACG,oBAAC,YAAD,CAAc,QAAd;AACG,IAAA,KAAK,GAAGZ,QAAQ,EAAEgB,aAAF,EAAiBd,aAA5B,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAKF,CA1BM","sourcesContent":["import React, { createContext, useState } from 'react';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nexport const StoreContext = createContext();\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [isDataLoading, setIsDataLoading] = false;\n   const fetcher = (url) => axios.get(url).then((res) => res.data);\n\n   const useFetcher = (endPoint) => {\n      const { data, error } = useSWR(endPoint, fetcher);\n      return {\n         foundProducts: data,\n         isLoading: !error && !data,\n         isError: error,\n      };\n   };\n\n   const fetchProducts = async () => {\n      try {\n         const { foundProducts, isLoading, isError } = useFetcher('/api/products');\n         setProducts(foundProducts);\n         setIsDataLoading(isLoading);\n      } catch (error) {}\n   };\n   return (\n      <StoreContext.Provider\n         value={(products, fetchProducts, isDataLoading)}\n      ></StoreContext.Provider>\n   );\n};\n"]},"metadata":{},"sourceType":"module"}
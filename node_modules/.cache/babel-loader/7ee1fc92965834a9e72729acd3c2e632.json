{"ast":null,"code":"var _jsxFileName = \"/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js\";\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nexport const StoreContext = createContext();\nexport const StoreContextProvider = props => {\n  const [products, setProducts] = useState([]);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR('/api/products', fetcher);\n\n  if (data) {\n    setProducts(data);\n  }\n\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      products\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/StoreContext.js"],"names":["React","createContext","useState","axios","StoreContext","StoreContextProvider","props","products","setProducts","isDataLoading","setIsDataLoading","fetcher","url","get","then","res","data","error","useSWR","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,oBAAoB,GAAIC,KAAD,IAAW;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMS,OAAO,GAAIC,GAAD,IAAST,KAAK,CAACU,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAjC,CAAzB;;AAEA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBC,MAAM,CAAC,eAAD,EAAkBP,OAAlB,CAA9B;;AAEA,MAAIK,IAAJ,EAAU;AACPR,IAAAA,WAAW,CAACQ,IAAD,CAAX;AACF;;AAED,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAET,MAAAA;AAAF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CD,KAAK,CAACa,QAAnD,CAAP;AACF,CAbM","sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nexport const StoreContext = createContext();\n\nexport const StoreContextProvider = (props) => {\n   const [products, setProducts] = useState([]);\n   const [isDataLoading, setIsDataLoading] = useState(false);\n\n   const fetcher = (url) => axios.get(url).then((res) => res.data);\n\n   const { data, error } = useSWR('/api/products', fetcher);\n\n   if (data) {\n      setProducts(data);\n   }\n\n   return <StoreContext.Provider value={{ products }}>{props.children}</StoreContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}
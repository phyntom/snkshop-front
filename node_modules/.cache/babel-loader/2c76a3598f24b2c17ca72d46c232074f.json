{"ast":null,"code":"export const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload.id)].quantity++;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'DECREASE':\n      state.cartItems[state.cartItems.findIndex(product => product._id === action.payload.id)].quantity--;\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    case 'ADD_PRODUCT':\n      if (!state.cartItems.find(item => item._id === action.payload._id)) {\n        state.cartItems.push({ ...action.payload,\n          quantity: 1\n        });\n      } else {\n        state.cartItems.push({ ...action.payload,\n          quantity: action.payload.quantity + 1\n        });\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'REMOVE_PRODUCT':\n      return;\n\n    default:\n      return;\n  }\n};\nexport const sumItems = cartItems => {\n  let itemCount = cartItems.reduce((count, product) => count + product.quantity, 0);\n  let total = cartItems.reduce((sum, product) => sum + product.price * product.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};","map":{"version":3,"sources":["/Users/aimable/WebstormProjects/sneakershop/snkshop-frontend/src/context/CartReducer.js"],"names":["CartReducer","state","action","type","cartItems","findIndex","product","_id","payload","id","quantity","find","item","push","sumItems","itemCount","reduce","count","total","sum","price","toFixed"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,UAAL;AACGF,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeC,EAAtE,CAAhB,EACIC,QADJ;AAEA,aAAO,EACJ,GAAGT,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,UAAL;AACGH,MAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACG,SAAN,CAAgBC,SAAhB,CAA2BC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBL,MAAM,CAACM,OAAP,CAAeC,EAAtE,CAAhB,EACIC,QADJ;AAEA,aAAO,EACJ,GAAGT,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV;AAFP,OAAP;;AAIH,SAAK,aAAL;AACG,UAAI,CAACH,KAAK,CAACG,SAAN,CAAgBO,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACL,GAAL,KAAaL,MAAM,CAACM,OAAP,CAAeD,GAA3D,CAAL,EAAsE;AACnEN,QAAAA,KAAK,CAACG,SAAN,CAAgBS,IAAhB,CAAqB,EAAE,GAAGX,MAAM,CAACM,OAAZ;AAAqBE,UAAAA,QAAQ,EAAE;AAA/B,SAArB;AACF,OAFD,MAEO;AACJT,QAAAA,KAAK,CAACG,SAAN,CAAgBS,IAAhB,CAAqB,EAAE,GAAGX,MAAM,CAACM,OAAZ;AAAqBE,UAAAA,QAAQ,EAAER,MAAM,CAACM,OAAP,CAAeE,QAAf,GAA0B;AAAzD,SAArB;AACF;;AACD,aAAO,EACJ,GAAGT,KADC;AAEJG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV,CAFP;AAGJ,WAAGU,QAAQ,CAACb,KAAK,CAACG,SAAP;AAHP,OAAP;;AAKH,SAAK,gBAAL;AACG;;AACH;AACG;AA7BN;AA+BF,CAhCM;AAkCP,OAAO,MAAMU,QAAQ,GAAIV,SAAD,IAAe;AACpC,MAAIW,SAAS,GAAGX,SAAS,CAACY,MAAV,CAAiB,CAACC,KAAD,EAAQX,OAAR,KAAoBW,KAAK,GAAGX,OAAO,CAACI,QAArD,EAA+D,CAA/D,CAAhB;AAEA,MAAIQ,KAAK,GAAGd,SAAS,CACjBY,MADQ,CACD,CAACG,GAAD,EAAMb,OAAN,KAAkBa,GAAG,GAAGb,OAAO,CAACc,KAAR,GAAgBd,OAAO,CAACI,QAD/C,EACyD,CADzD,EAERW,OAFQ,CAEA,CAFA,CAAZ;AAGA,SAAO;AAAEN,IAAAA,SAAF;AAAaG,IAAAA;AAAb,GAAP;AACF,CAPM","sourcesContent":["export const CartReducer = (state, action) => {\n   switch (action.type) {\n      case 'INCREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload.id)]\n            .quantity++;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'DECREASE':\n         state.cartItems[state.cartItems.findIndex((product) => product._id === action.payload.id)]\n            .quantity--;\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n         };\n      case 'ADD_PRODUCT':\n         if (!state.cartItems.find((item) => item._id === action.payload._id)) {\n            state.cartItems.push({ ...action.payload, quantity: 1 });\n         } else {\n            state.cartItems.push({ ...action.payload, quantity: action.payload.quantity + 1 });\n         }\n         return {\n            ...state,\n            cartItems: [...state.cartItems],\n            ...sumItems(state.cartItems),\n         };\n      case 'REMOVE_PRODUCT':\n         return;\n      default:\n         return;\n   }\n};\n\nexport const sumItems = (cartItems) => {\n   let itemCount = cartItems.reduce((count, product) => count + product.quantity, 0);\n\n   let total = cartItems\n      .reduce((sum, product) => sum + product.price * product.quantity, 0)\n      .toFixed(2);\n   return { itemCount, total };\n};\n"]},"metadata":{},"sourceType":"module"}